////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : circuito2parte2_drc.vf
// /___/   /\     Timestamp : 11/24/2021 20:04:26
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: C:\Xilinx\14.7\ISE_DS\ISE\bin\nt64\unwrapped\sch2hdl.exe -intstyle ise -family spartan6 -verilog circuito2parte2_drc.vf -w "C:/Users/Francisco MSI/Documents/Escola/Systemas Digitais/Projeto 1/Projeto1/circuito2parte2.sch"
//Design Name: circuito2parte2
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module circuito2parte2(XJ1eJ2, 
                       XJ1eJ3, 
                       XJ1eJ4, 
                       XJ2eJ3, 
                       XJ2eJ4, 
                       XJ3eJ4, 
                       Empate, 
                       Vitoria);

    input XJ1eJ2;
    input XJ1eJ3;
    input XJ1eJ4;
    input XJ2eJ3;
    input XJ2eJ4;
    input XJ3eJ4;
   output Empate;
   output Vitoria;
   
   wire XLXN_26;
   wire XLXN_29;
   wire XLXN_30;
   wire XLXN_32;
   wire XLXN_33;
   wire XLXN_45;
   wire XLXN_46;
   wire XLXN_47;
   wire XLXN_48;
   wire XLXN_49;
   wire XLXN_50;
   wire XLXN_59;
   wire XLXN_60;
   wire XLXN_61;
   wire XLXN_62;
   wire XLXN_63;
   wire XLXN_64;
   wire XLXN_65;
   wire XLXN_66;
   wire XLXN_67;
   wire XLXN_68;
   wire XLXN_69;
   wire XLXN_70;
   wire XLXN_71;
   wire XLXN_72;
   wire XLXN_78;
   wire XLXN_79;
   wire XLXN_80;
   wire XLXN_81;
   wire XLXN_83;
   wire Vitoria_DUMMY;
   
   assign Vitoria = Vitoria_DUMMY;
   (* IOSTANDARD = "DEFAULT" *) (* IBUF_DELAY_VALUE = "0" *) (* 
         IFD_DELAY_VALUE = "AUTO" *) 
   IBUF  XLXI_2 (.I(XJ1eJ4), 
                .O(XLXN_33));
   (* IOSTANDARD = "DEFAULT" *) (* IBUF_DELAY_VALUE = "0" *) (* 
         IFD_DELAY_VALUE = "AUTO" *) 
   IBUF  XLXI_3 (.I(XJ1eJ3), 
                .O(XLXN_59));
   (* IOSTANDARD = "DEFAULT" *) (* IBUF_DELAY_VALUE = "0" *) (* 
         IFD_DELAY_VALUE = "AUTO" *) 
   IBUF  XLXI_4 (.I(XJ2eJ4), 
                .O(XLXN_32));
   (* IOSTANDARD = "DEFAULT" *) (* IBUF_DELAY_VALUE = "0" *) (* 
         IFD_DELAY_VALUE = "AUTO" *) 
   IBUF  XLXI_5 (.I(XJ3eJ4), 
                .O(XLXN_30));
   (* IOSTANDARD = "DEFAULT" *) (* IBUF_DELAY_VALUE = "0" *) (* 
         IFD_DELAY_VALUE = "AUTO" *) 
   IBUF  XLXI_6 (.I(XJ2eJ3), 
                .O(XLXN_26));
   (* IOSTANDARD = "DEFAULT" *) (* IBUF_DELAY_VALUE = "0" *) (* 
         IFD_DELAY_VALUE = "AUTO" *) 
   IBUF  XLXI_7 (.I(XJ1eJ2), 
                .O(XLXN_29));
   AND2  XLXI_14 (.I0(XLXN_32), 
                 .I1(XLXN_29), 
                 .O(XLXN_78));
   AND2  XLXI_15 (.I0(XLXN_33), 
                 .I1(XLXN_30), 
                 .O(XLXN_79));
   AND2  XLXI_16 (.I0(XLXN_30), 
                 .I1(XLXN_26), 
                 .O(XLXN_71));
   AND2  XLXI_17 (.I0(XLXN_26), 
                 .I1(XLXN_29), 
                 .O(XLXN_70));
   AND2  XLXI_64 (.I0(XLXN_45), 
                 .I1(XLXN_29), 
                 .O(XLXN_69));
   AND2  XLXI_65 (.I0(XLXN_46), 
                 .I1(XLXN_30), 
                 .O(XLXN_68));
   AND2  XLXI_66 (.I0(XLXN_47), 
                 .I1(XLXN_26), 
                 .O(XLXN_65));
   AND2  XLXI_67 (.I0(XLXN_48), 
                 .I1(XLXN_32), 
                 .O(XLXN_63));
   AND2  XLXI_68 (.I0(XLXN_50), 
                 .I1(XLXN_33), 
                 .O(XLXN_61));
   AND2  XLXI_69 (.I0(XLXN_49), 
                 .I1(XLXN_59), 
                 .O(XLXN_62));
   INV  XLXI_88 (.I(XLXN_30), 
                .O(XLXN_45));
   INV  XLXI_89 (.I(XLXN_29), 
                .O(XLXN_46));
   INV  XLXI_90 (.I(XLXN_33), 
                .O(XLXN_47));
   INV  XLXI_91 (.I(XLXN_59), 
                .O(XLXN_48));
   INV  XLXI_92 (.I(XLXN_32), 
                .O(XLXN_49));
   INV  XLXI_93 (.I(XLXN_26), 
                .O(XLXN_50));
   XOR2  XLXI_100 (.I0(XLXN_61), 
                  .I1(XLXN_62), 
                  .O(XLXN_60));
   XOR2  XLXI_101 (.I0(XLXN_60), 
                  .I1(XLXN_63), 
                  .O(XLXN_64));
   XOR2  XLXI_102 (.I0(XLXN_64), 
                  .I1(XLXN_65), 
                  .O(XLXN_66));
   XOR2  XLXI_103 (.I0(XLXN_66), 
                  .I1(XLXN_68), 
                  .O(XLXN_67));
   XOR2  XLXI_104 (.I0(XLXN_67), 
                  .I1(XLXN_69), 
                  .O(XLXN_81));
   XOR2  XLXI_106 (.I0(XLXN_81), 
                  .I1(XLXN_80), 
                  .O(Vitoria_DUMMY));
   XOR2  XLXI_107 (.I0(XLXN_78), 
                  .I1(XLXN_72), 
                  .O(XLXN_83));
   XOR2  XLXI_108 (.I0(XLXN_79), 
                  .I1(XLXN_83), 
                  .O(XLXN_80));
   XOR2  XLXI_109 (.I0(XLXN_71), 
                  .I1(XLXN_70), 
                  .O(XLXN_72));
   INV  XLXI_113 (.I(Vitoria_DUMMY), 
                 .O(Empate));
endmodule
